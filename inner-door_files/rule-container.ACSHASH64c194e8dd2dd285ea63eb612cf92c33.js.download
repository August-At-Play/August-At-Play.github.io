function RuleContainer() {
  this.init = function () {
    console.log("[Innerdoor] init rule container with retries");
    var entitlementContainerComponents = $(".ruleContainer-id");

    entitlementContainerComponents.each(function (index) {
      var enabledEntitlementIds = "";
      if ($(this).data("enabled-entitlement-ids"))
        enabledEntitlementIds = "" + $(this).data("enabled-entitlement-ids");
      var disabledEntitlementId = "";
      if ($(this).data("disabled-entitlement-id"))
        disabledEntitlementId = "" + $(this).data("disabled-entitlement-id");

      var memberType = "";
      if ($(this).data("member-type"))
        memberType = "" + $(this).data("member-type");

      var entitlementContainer = $(this);
      entitlementContainer.hide();
      var enabledEntitlementIdsArray = enabledEntitlementIds.split(",");

      var kpUserProfile = window["$kp"].KPUserProfile.UserProfileClient;

      if (
        enabledEntitlementIdsArray.length > 0 &&
        enabledEntitlementIds.length > 0
      ) {
        window.$kp.KPUserProfile.UserProfileClient.load().then(function (data) {
          for (var i = 0; i < enabledEntitlementIdsArray.length; i++) {
            var enabledEntitlementId = enabledEntitlementIdsArray[i];
            if (
              kpUserProfile.hasEntitlementForCurrentUser(enabledEntitlementId)
            ) {
              if (
                disabledEntitlementId.length == 0 ||
                (disabledEntitlementId.length > 0 &&
                  !kpUserProfile.hasEntitlementForCurrentUser(
                    disabledEntitlementId
                  ))
              ) {
                showContainer(entitlementContainer);
              }
            } else {
              hideContainer(entitlementContainer);
            }
          }
        });
      } else if (memberType) {
        window.$kp.KPUserProfile.UserProfileClient.load().then(function (data) {
          if ($kp.KPProxyPicker.ProxyPickerClient.isProxySelected() == true) {
            if (
              memberType == "member" &&
              (isProxyActiveMember() || isProxyCAFH())
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "member-only" &&
              isProxyActiveMember() &&
              !isProxyCAFH()
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "former-member" &&
              (isProxyFM() || isProxyNMP())
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "dualchoice" &&
              hasDualChoicePlan() == "Y"
            ) {
              showContainer(entitlementContainer);
            } else if (memberType == "non-member" && isProxyNMA()) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "user-with-proxies" &&
              $kp.KPUserProfile.UserProfileClient.getProxies().length > 0
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "user-without-proxies" &&
              $kp.KPUserProfile.UserProfileClient.getProxies().length == 0
            ) {
              showContainer(entitlementContainer);
            } else if (memberType == "former-member-only" && isProxyFM()) {
              showContainer(entitlementContainer);
            } else if (memberType == "nmp-only" && isProxyNMP()) {
              showContainer(entitlementContainer);
            } else if (memberType == "cafh-only" && isProxyCAFH()) {
              showContainer(entitlementContainer);
            } else {
              entitlementContainer.hide();
              hideContainer(entitlementContainer);
            }
          } else {
            if (
              memberType == "member" &&
              $kp.KPUserProfile.UserProfileClient.getUser().isMemberOrCAFH &&
              (typeof $kp.KPUserProfile.UserProfileClient.getUser().userType ===
                "undefined" ||
                ($kp.KPUserProfile.UserProfileClient.getUser().roleType !=
                  "NMP" &&
                  $kp.KPUserProfile.UserProfileClient.getUser().userType !=
                    "FM"))
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "member-only" &&
              $kp.KPUserProfile.UserProfileClient.getUser().isMember &&
              !$kp.KPUserProfile.UserProfileClient.getUser().isCAFH &&
              (typeof $kp.KPUserProfile.UserProfileClient.getUser().userType ===
                "undefined" ||
                ($kp.KPUserProfile.UserProfileClient.getUser().roleType !=
                  "NMP" &&
                  $kp.KPUserProfile.UserProfileClient.getUser().userType !=
                    "FM"))
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "subject-active-member" &&
              $kp.KPUserProfile.UserProfileClient.getUser().isMemberOrCAFH &&
              (typeof $kp.KPUserProfile.UserProfileClient.getUser().userType ===
                "undefined" ||
                ($kp.KPUserProfile.UserProfileClient.getUser().roleType !=
                  "NMP" &&
                  $kp.KPUserProfile.UserProfileClient.getUser().userType !=
                    "FM"))
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "former-member" &&
              ($kp.KPUserProfile.UserProfileClient.getUser().userType == "FM" ||
                $kp.KPUserProfile.UserProfileClient.getUser().roleType == "NMP")
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "dualchoice" &&
              hasDualChoicePlan() == "Y"
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "non-member" &&
              $kp.KPUserProfile.UserProfileClient.getUser().roleType == "UNM"
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "user-with-proxies" &&
              $kp.KPUserProfile.UserProfileClient.getProxies().length > 0
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "user-without-proxies" &&
              $kp.KPUserProfile.UserProfileClient.getProxies().length == 0
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "former-member-only" &&
              $kp.KPUserProfile.UserProfileClient.getUser().userType == "FM"
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "nmp-only" &&
              $kp.KPUserProfile.UserProfileClient.getUser().roleType == "NMP"
            ) {
              showContainer(entitlementContainer);
            } else if (
              memberType == "cafh-only" &&
              $kp.KPUserProfile.UserProfileClient.getUser().isCAFH
            ) {
              showContainer(entitlementContainer);
            } else if (memberType == "col-commercial-ppo") {
              handleColoradoCommercialPPOMemberRule(
                entitlementContainer,
                1000,
                3
              );
            } else if (memberType == "col-medicare-ppo") {
              handleColoradoMedicarePPOMemberRule(
                entitlementContainer,
                1000,
                3
              );
            } else {
              hideContainer(entitlementContainer);
            }
          }
        });
      }
    });
  };
}

function handleColoradoCommercialPPOMemberRule(
  entitlementContainer,
  ms,
  tries
) {
  tries -= 1;
  if (tries < 0) {
    hideContainer(entitlementContainer);
    return;
  }

  if (!isActiveMemberAndNotCAFH()) {
    hideContainer(entitlementContainer);
    return;
  }

  if ($kp.coverage) {
    if (isColoradoCommercialPPOMember()) {
      showContainer(entitlementContainer);
    } else {
      hideContainer(entitlementContainer);
    }
    return;
  }

  setTimeout(() => {
    handleColoradoCommercialPPOMemberRule(entitlementContainer, ms, tries);
  }, ms);
}

function handleColoradoMedicarePPOMemberRule(entitlementContainer, ms, tries) {
  tries -= 1;
  if (tries < 0) {
    hideContainer(entitlementContainer);
    return;
  }

  if (!isActiveMemberAndNotCAFH()) {
    hideContainer(entitlementContainer);
    return;
  }

  if ($kp.coverage) {
    if (isColoradoMedicarePPOMember()) {
      showContainer(entitlementContainer);
    } else {
      hideContainer(entitlementContainer);
    }
    return;
  }

  setTimeout(() => {
    handleColoradoMedicarePPOMemberRule(entitlementContainer, ms, tries);
  }, ms);
}

function isColoradoCommercialPPOMember() {
  let res = !!(
    $kp.coverage?.isCO_PPOUser && $kp.coverage.LOB == "Commercial PPO"
  );
  return res;
}

function isColoradoMedicarePPOMember() {
  let res = !!(
    $kp.coverage?.isCO_PPOUser && $kp.coverage.LOB == "Medicare PPO"
  );
  return res;
}

function getProxyInfo(data) {
  new RuleContainer().init();
}

function isActiveMemberAndNotCAFH() {
  return (
    $kp.KPUserProfile.UserProfileClient.getUser().isMember &&
    !$kp.KPUserProfile.UserProfileClient.getUser().isCAFH &&
    (typeof $kp.KPUserProfile.UserProfileClient.getUser().userType ===
      "undefined" ||
      ($kp.KPUserProfile.UserProfileClient.getUser().roleType != "NMP" &&
        $kp.KPUserProfile.UserProfileClient.getUser().userType != "FM"))
  );
}

function hasDualChoicePlan() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return selectedProxy[0] && selectedProxy[0].hasDualChoicePlan
      ? selectedProxy[0].hasDualChoicePlan
      : userProfile.getUser().hasDualChoicePlan;
  }
  return userProfile.getUser().hasDualChoicePlan;
}

function isProxyNMP() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return selectedProxy[0] && selectedProxy[0].ebizRole == "NMP"
      ? true
      : false;
  }
  return false;
}

function isProxyFM() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return selectedProxy[0] &&
      selectedProxy[0].ebizRole == "MBR" &&
      selectedProxy[0].userType.includes("FM")
      ? true
      : false;
  }
  return false;
}

function isProxyActiveMember() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return (
      selectedProxy[0] &&
      selectedProxy[0].ebizRole == "MBR" &&
      !selectedProxy[0].userType.includes("FM")
    );
  }
  return false;
}

function isProxyCAFH() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return selectedProxy[0] &&
      selectedProxy[0].ebizRole == "CAFH" &&
      !selectedProxy[0].userType.includes("FM")
      ? true
      : false;
  }
  return false;
}

function isProxyNMA() {
  var userProfile = window.$kp.KPUserProfile.UserProfileClient;
  var proxyClient = window.$kp.KPProxyPicker.ProxyPickerClient;
  var relId = proxyClient.getRelationshipId();
  if (proxyClient.isProxySelected() && relId) {
    var selectedProxy = userProfile.getProxies().filter(function (proxy) {
      return proxy.relationshipID === relId;
    });
    return selectedProxy[0] && selectedProxy[0].ebizRole == "UNM";
  }
  return false;
}

function showContainer(entitlementContainer) {
  console.log("individual show container " + new Date().getMilliseconds());
  entitlementContainer.show();
  if (entitlementContainer.data("scondary-modal")) {
    console.log("rules container in secondary modal and show parent");
    entitlementContainer.parent().parent().parent().show();
  }
}

function hideContainer(entitlementContainer) {
  entitlementContainer.hide();
  if (entitlementContainer.data("scondary-modal")) {
    console.log("rules container in secondary modal and hide parent");
    entitlementContainer.parent().parent().parent().hide();
  }
}

function showAsideTop(entitlementContainer) {
  //console.log("entitlementContainer parent class:"+entitlementContainer.parent().parent().attr('class'));
  if (entitlementContainer.parent().parent().attr("class") == "-aside-top") {
    console.log(
      "entitlementContainer parent class:" +
        entitlementContainer.parent().parent().attr("class")
    );
    $(".-aside-top").show();
  }
}

if (typeof $ != "undefined") {
  $(document).ready(function () {
    new RuleContainer().init();
    window.$kp.KPProxyPicker.ProxyPickerClient.onChange(getProxyInfo);
  });
}
